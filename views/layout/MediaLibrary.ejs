<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/header') %>
  <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet" />
  <style>
    .media-card {
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      background: linear-gradient(to bottom right, #ffffff, #f8fafc);
    }
    .media-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
    }
    .btn-hover {
      transition: background-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
    }
    .btn-hover:hover {
      transform: scale(1.05);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
    }
    .dropdown-menu {
      transition: opacity 0.3s ease, transform 0.3s ease;
    }
    .dropdown-menu.hidden {
      opacity: 0;
      transform: translateY(-8px);
    }
    .input-focus {
      transition: all 0.3s ease;
    }
    .input-focus:focus {
      border-color: #10B981;
      box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.2);
    }
  </style>
</head>
<body class="min-h-screen  flex flex-col font-sans">
  <%- include('../partials/navbar') %>
  <div class="flex flex-grow min-h-screen">
    <%- include('../partials/sidebar') %>
    <div class="flex-grow p-4 sm:p-6 lg:p-8">
      <!-- Search and Add Media -->
      <div class="flex items-center justify-center gap-4 mb-10" data-aos="fade-down" data-aos-duration="800">
        <input
          type="text"
          class="w-full max-w-lg border border-gray-200 rounded-lg p-3 bg-white focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 input-focus text-gray-900 placeholder-gray-400"
          placeholder="Search media by tag..."
          id="searchInput"
          aria-label="Search media by tag"
        />
        <button
          class="bg-emerald-600 text-white px-5 py-3 rounded-lg font-semibold btn-hover shadow-md flex items-center gap-2"
          id="AddMedia"
          aria-label="Add new media"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
          </svg>
          Add Media
        </button>
      </div>

      <!-- Media Grid -->
      <div class="my-12">
        <% if(media && media.medialibrary?.length > 0) { %>
          <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6 justify-items-center">
            <% media.medialibrary.forEach((item, index) => { %>
              <div
                class="media-card relative rounded-xl overflow-hidden w-full max-w-[250px] h-[250px] border border-gray-200 shadow-md"
                data-tags="<%= item.tag %>"
                data-aos="fade-up"
                data-aos-duration="800"
                data-aos-delay="<%= index * 100 %>"
              >
                <img
                  src="/<%= item.url %>"
                  class="w-full h-full object-cover"
                  alt="Media image with tags <%= item.tag %>"
                />
                <div class="absolute inset-0 bg-black opacity-0 hover:opacity-30 transition-opacity duration-200"></div>
                <button
                  class="absolute right-3 top-3 text-black text-xl hover:bg-white rounded-full p-2"
                  aria-label="Media options for <%= item.tag %>"
                  onclick="toggleDropdown(event, this)"
                >
                  <svg class="w-5 h-5 t-whitetex" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v.01M12 12v.01M12 18v.01" />
                  </svg>
                </button>
                <div class="dropdown-menu absolute hidden bg-white rounded-lg shadow-xl top-12 right-3 w-48 z-20 border border-gray-200">
                  <ul class="flex flex-col text-sm text-gray-900">
                    <li
                      class="px-4 py-3 hover:bg-emerald-50 cursor-pointer flex items-center gap-2"
                      onclick="handleCopy('<%= item.url %>', this.closest('.dropdown-menu'))"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                      </svg>
                      Copy URL
                    </li>
                    <li
                      class="px-4 py-3 hover:bg-emerald-50 cursor-pointer flex items-center gap-2"
                      onclick="window.location.href='/imagepreview/<%= item._id %>#editImage'"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                      </svg>
                      Edit
                    </li>
                    <li
                      class="px-4 py-3 hover:bg-emerald-50 cursor-pointer flex items-center gap-2"
                      onclick="handleDelete('<%= item._id %>', this.closest('.dropdown-menu'))"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5-4h4a2 2 0 012 2v2H8V5a2 2 0 012-2z" />
                      </svg>
                      Delete
                    </li>
                    <li
                      class="px-4 py-3 hover:bg-emerald-50 cursor-pointer flex items-center gap-2"
                      onclick="window.location.href='/imagepreview/<%= item._id %>'"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4" />
                      </svg>
                      Preview
                    </li>
                  </ul>
                </div>
              </div>
            <% }) %>
          </div>
        <% } else { %>
          <div class="flex justify-center items-center my-16">
            <p class="font-semibold text-gray-900 text-xl">No media available at this time</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>

  <!-- Media Upload Popup -->
  <div
    id="popupMedia"
    class="fixed hidden bg-black bg-opacity-60 inset-0 flex justify-center items-center z-50"
    data-aos="zoom-in"
    data-aos-duration="500"
  >
    <div class="bg-white w-full max-w-lg p-8 rounded-2xl shadow-2xl relative">
      <h3 class="text-2xl font-bold text-gray-900 mb-6 text-center">Add Media</h3>
      <div class="flex justify-center gap-4 mb-6">
        <button
          id="showMediaData"
          class="flex-1 py-2.5 text-sm font-semibold bg-gray-100 rounded-lg hover:bg-gray-200 btn-hover focus:outline-none focus:ring-2 focus:ring-emerald-500"
          aria-label="Upload image"
        >
          Upload Image
        </button>
        <button
          id="showUrlData"
          class="flex-1 py-2.5 text-sm font-semibold bg-gray-100 rounded-lg hover:bg-gray-200 btn-hover focus:outline-none focus:ring-2 focus:ring-emerald-500"
          aria-label="Add image URL"
        >
          Add URL
        </button>
      </div>
      <form
        action="/submitMedia"
        method="post"
        enctype="multipart/form-data"
        class="mediaForm flex flex-col gap-5"
      >
        <div
          class="showMedia flex flex-col items-center justify-center w-full h-40 border-2 border-dashed border-gray-300 bg-gray-50 rounded-lg cursor-pointer hover:bg-gray-100 transition-all duration-200"
          onclick="document.getElementById('mediaInput').click()"
        >
          <label class="image-name text-gray-600 font-medium">Click to upload an image</label>
          <input
            id="mediaInput"
            type="file"
            name="mediaImage"
            accept="image/*"
            class="hidden"
            aria-label="Upload media image"
          />
        </div>
        <div class="showurl hidden flex flex-col w-full">
          <input
            id="urlInput"
            type="text"
            name="url"
            placeholder="Enter image URL (e.g., https://example.com/image.jpg)"
            class="w-full p-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 input-focus text-gray-900"
            aria-label="Image URL"
            aria-describedby="url-help"
          />
          <p id="url-help" class="text-xs text-gray-500 mt-1">Enter a valid image URL.</p>
        </div>
        <input
          id="tagInput"
          name="tag"
          type="text"
          placeholder="Enter tags (comma-separated)"
          class="w-full p-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 input-focus text-gray-900 placeholder-gray-400"
          aria-label="Media tags"
          aria-describedby="tag-help"
        />
        <p id="tag-help" class="text-xs text-gray-500">Separate tags with commas (e.g., nature, landscape).</p>
        <div class="flex justify-end gap-4">
          <button
            type="button"
            class="px-5 py-2.5 bg-gray-200 text-gray-900 rounded-lg font-semibold btn-hover focus:ring-2 focus:ring-gray-300"
            onclick="closePopup()"
            aria-label="Cancel media upload"
          >
            Cancel
          </button>
          <button
            type="submit"
            class="px-5 py-2.5 bg-emerald-600 text-white rounded-lg font-semibold btn-hover focus:ring-2 focus:ring-emerald-500 flex items-center gap-2"
            aria-label="Submit media"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
            </svg>
            Submit
          </button>
        </div>
      </form>
      <button
        class="absolute right-4 top-4 text-gray-500 hover:text-gray-900 focus:ring-2 focus:ring-gray-300 rounded-full p-2"
        onclick="closePopup()"
        aria-label="Close media upload popup"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Delete Confirmation Popup -->
  <div
    id="popup"
    class="fixed hidden bg-black bg-opacity-60 inset-0 flex justify-center items-center z-50"
    data-aos="zoom-in"
    data-aos-duration="500"
  >
    <div class="bg-white p-8 rounded-2xl shadow-2xl text-center max-w-sm w-full">
      <p class="text-lg font-semibold text-gray-900 mb-6">Are you sure you want to delete this image?</p>
      <div class="flex justify-center gap-4">
        <button
          id="no"
          class="px-5 py-2.5 bg-gray-200 text-gray-900 rounded-lg font-semibold btn-hover focus:ring-2 focus:ring-gray-300"
          aria-label="Cancel deletion"
        >
          No
        </button>
        <button
          id="yes"
          class="px-5 py-2.5 bg-red-600 text-white rounded-lg font-semibold btn-hover focus:ring-2 focus:ring-red-500 flex items-center gap-2"
          aria-label="Confirm deletion"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5-4h4a2 2 0 012 2v2H8V5a2 2 0 012-2z" />
          </svg>
          Yes
        </button>
      </div>
    </div>
  </div>

  <%- include('../partials/footer') %>

  <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
  <script>
    AOS.init({ once: true, offset: 100, duration: 800, easing: 'ease-out' });

    const searchInput = document.getElementById("searchInput");
    const mediaCards = document.querySelectorAll(".media-card");
    const mediaForm = document.querySelector(".mediaForm");
    const showMedia = document.querySelector(".showMedia");
    const showUrl = document.querySelector(".showurl");
    const mediaInput = document.getElementById("mediaInput");
    const urlInput = document.getElementById("urlInput");
    const tagInput = document.getElementById("tagInput");

    // Search functionality
    searchInput.addEventListener("input", function () {
      const value = this.value.toLowerCase();
      mediaCards.forEach((card) => {
        const tags = card.dataset.tags.split(",").map((tag) => tag.trim().toLowerCase());
        card.style.display = tags.some((tag) => tag.includes(value)) ? "block" : "none";
      });
    });

    // Media upload popup toggle
    document.getElementById("AddMedia").addEventListener("click", () => {
      document.getElementById("popupMedia").classList.remove("hidden");
    });

    // Close popup
    function closePopup() {
      mediaForm.reset();
      document.querySelector(".image-name").textContent = "Click to upload an image";
      showMedia.classList.remove("hidden");
      showUrl.classList.add("hidden");
      document.getElementById("popupMedia").classList.add("hidden");
    }

    // Toggle between image upload and URL input
    document.getElementById("showMediaData").addEventListener("click", () => {
      showMedia.classList.remove("hidden");
      showUrl.classList.add("hidden");
      urlInput.value = "";
      tagInput.value = "";
      document.getElementById("showMediaData").classList.add("bg-emerald-100", "text-emerald-700");
      document.getElementById("showUrlData").classList.remove("bg-emerald-100", "text-emerald-700");
    });

    document.getElementById("showUrlData").addEventListener("click", () => {
      showMedia.classList.add("hidden");
      showUrl.classList.remove("hidden");
      mediaInput.value = "";
      tagInput.value = "";
      document.getElementById("showUrlData").classList.add("bg-emerald-100", "text-emerald-700");
      document.getElementById("showMediaData").classList.remove("bg-emerald-100", "text-emerald-700");
    });

    // Display selected file name
    mediaInput.addEventListener("change", function (event) {
      const file = event.target.files[0];
      const label = document.querySelector(".image-name");
      if (file) {
        const maxSize = 5 * 1024 * 1024; // 5MB
        if (file.size > maxSize) {
          alert("File size exceeds 5MB. Please choose a smaller image.");
          event.target.value = "";
          label.textContent = "Click to upload an image";
        } else {
          label.textContent = `Selected: ${file.name}`;
        }
      }
    });

    // Dropdown toggle
    function toggleDropdown(event, button) {
      event.stopPropagation();
      const dropdown = button.nextElementSibling;
      document.querySelectorAll(".dropdown-menu").forEach((menu) => {
        if (menu !== dropdown) menu.classList.add("hidden");
      });
      dropdown.classList.toggle("hidden");
    }

    // Copy URL
    function handleCopy(url, dropdown) {
      navigator.clipboard.writeText(window.location.origin + "/" + url).then(() => {
        dropdown.classList.add("hidden");
        // Assuming toast notification is defined in toast.ejs
        showToast('URL copied to clipboard!', 'success');
      }).catch((err) => {
        console.error('Failed to copy URL:', err);
        showToast('Failed to copy URL', 'error');
      });
    }

    // Delete confirmation
    function handleDelete(imageId, dropdown) {
      event.stopPropagation();
      const popup = document.getElementById("popup");
      popup.classList.remove("hidden");
      const noBtn = document.getElementById("no");
      const yesBtn = document.getElementById("yes");

      noBtn.addEventListener("click", () => {
        popup.classList.add("hidden");
      }, { once: true });

      yesBtn.addEventListener("click", async () => {
        try {
          const response = await fetch(`/deleteImage/${imageId}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
          });
          if (response.ok) {
            showToast('Image deleted successfully!', 'success');
            setTimeout(() => window.location.reload(), 1000);
          } else {
            showToast('Failed to delete image', 'error');
          }
        } catch (error) {
          console.error("Error deleting image:", error);
          showToast('Error occurred while deleting', 'error');
        } finally {
          popup.classList.add("hidden");
          dropdown.classList.add("hidden");
        }
      }, { once: true });
    }

    // Close dropdowns when clicking outside
    document.addEventListener("click", (event) => {
      if (!event.target.closest(".media-card")) {
        document.querySelectorAll(".dropdown-menu").forEach((menu) => {
          menu.classList.add("hidden");
        });
      }
    });
  </script>
</body>
</html>