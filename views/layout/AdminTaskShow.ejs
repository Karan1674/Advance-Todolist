<!DOCTYPE html>
<html lang="en">
  <%- include('../partials/header.ejs') %>
  <body class="min-h-screen bg-gray-100 flex flex-col">
    <%- include('../partials/navbar.ejs') %>

  <div class="flex flex-grow">
     <%- include('../partials/sidebar') %>

    <div class="flex-grow mt-10 px-5 m-5">
      <input
        type="text"
        class="w-[100%] border rounded-md p-3 mb-5 border-gray-200 pl-4 bg-white"
        placeholder="search the task"
        id="searchInput"
      />
      <div class="overflow-x-auto">
        <table
          class="text-sm text-left w-full mx-auto text-gray-700 border border-gray-200 shadow-sm rounded-lg min-w-[800px]"
        >
          <thead class="text-xs uppercase bg-gray-100 text-gray-600">
            <tr>
              <th class="px-4 py-3">Sr no.</th>
              <th class="px-4 py-3">Title</th>
              <th class="px-4 py-3">Assigned To</th>
              <th class="px-4 py-3">Email</th>
              <th class="px-4 py-3">Status</th>
              <th class="px-4 py-3">Deadline</th>
              <th></th>
              <th></th>
              <th></th>
            </tr>
          </thead>
          <tbody class="bg-white">
            <% if (todolist && todolist.length > 0) { %> <%
            todolist.forEach((task, index) => { %>
            <tr class="hover:bg-gray-50">
              <td class="px-4 py-3 font-medium text-gray-900">
                <%= index + 1 %>
              </td>
              <td class="px-4 py-3"><%= task.title %></td>
              <td class="px-4 py-3">
                <%= task.userId.firstName %> <%= task.userId.lastName %>
              </td>
              <td class="px-4 py-3"><%= task.userId.email %></td>
              <td class="px-4 py-3">
                <span
                  class="inline-block px-2 py-1 text-xs font-semibold rounded-full <%= task.status === 'completed' ? 'bg-green-100 text-green-800' : task.status === 'in-process' ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800' %>"
                >
                  <%= task.status %>
                </span>
              </td>
              <td class="px-4 py-3">
                <%= new Date(task.deadline).toDateString() %>
              </td>
              <td class="px-4 py-3">
                <a
                  href="/taskDetail/<%= task._id %>"
                  class="font-medium text-green-600 hover:underline"
                  >View</a
                >
              </td>
              <td class="px-4 py-3">
                <a
                  href="/editAdminpage/<%= task._id %>"
                  class="font-medium text-blue-600 hover:underline"
                  >Edit</a
                >
              </td>
              <td class="px-4 py-3">
                <button
                  onclick="handleDelete('<%= task._id %>')"
                  class="font-medium text-red-600 hover:underline"
                >
                  Delete
                </button>
              </td>
            </tr>
            <% }) %> <% } else { %>
            <tr>
              <td colspan="9" class="text-center px-4 py-5 text-gray-400">
                No tasks available
              </td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
</div>
    <%- include('../partials/footer.ejs') %>
     <%- include('../partials/popup') %>
  </body>
  <script>
    const handleDelete = (taskId) => {
      event.stopPropagation();
      const popup = document.querySelector("#popup");

      popup.classList.remove("hidden");

      const nobtn = document.querySelector("#no");
      const yesbtn = document.querySelector("#yes");

      nobtn.addEventListener("click", () => {
        popup.classList.add("hidden");
      });
      yesbtn.addEventListener("click", async () => {
        popup.classList.add("hidden");

        try {
          const response = await fetch("/deletetask/" + taskId, {
            method: "POST",
          });

          if (response.ok) {
            window.location.reload();
          } else {
            alert("Failed to delete task");
          }
        } catch (error) {
          console.error("Error deleting task:", error);
          alert("Error occurred while deleting");
        }
      });
    };

    const searchInput = document.getElementById("searchInput");
    const tableRows = document.querySelectorAll("tbody tr");

    searchInput.addEventListener("input", () => {
      const query = searchInput.value.toLowerCase().trim();

      tableRows.forEach((row) => {
        const rowText = row.textContent.toLowerCase();
        console.log(rowText);
        if (rowText.includes(query)) {
          row.style.display = "";
        } else {
          row.style.display = "none";
        }
      });
    });
  </script>
</html>
